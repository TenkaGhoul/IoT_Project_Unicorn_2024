[{"id":"2c41a2bd.aa36ae","type":"tab","label":"sensor","disabled":false,"info":""},{"id":"a1a7e6060477eae1","type":"tab","label":"blinders","disabled":false,"info":"","env":[]},{"id":"29fba84a.b2af58","type":"mqtt-broker","name":"","broker":"127.0.0.1","port":"1883","clientid":"","autoConnect":true,"usetls":false,"protocolVersion":"4","keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","birthMsg":{},"closeTopic":"","closePayload":"","closeMsg":{},"willTopic":"","willQos":"0","willPayload":"","willMsg":{},"userProps":"","sessionExpiry":""},{"id":"bf6a3c96.35048","type":"ui_base","theme":{"name":"theme-light","lightTheme":{"default":"#0094CE","baseColor":"#0094CE","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"darkTheme":{"default":"#097479","baseColor":"#097479","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":false},"customTheme":{"name":"Untitled Theme 1","default":"#4B7930","baseColor":"#4B7930","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"},"themeState":{"base-color":{"default":"#0094CE","value":"#0094CE","edited":false},"page-titlebar-backgroundColor":{"value":"#0094CE","edited":false},"page-backgroundColor":{"value":"#fafafa","edited":false},"page-sidebar-backgroundColor":{"value":"#ffffff","edited":false},"group-textColor":{"value":"#1bbfff","edited":false},"group-borderColor":{"value":"#ffffff","edited":false},"group-backgroundColor":{"value":"#ffffff","edited":false},"widget-textColor":{"value":"#111111","edited":false},"widget-backgroundColor":{"value":"#0094ce","edited":false},"widget-borderColor":{"value":"#ffffff","edited":false},"base-font":{"value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"}},"angularTheme":{"primary":"indigo","accents":"blue","warn":"red","background":"grey","palette":"light"}},"site":{"name":"Node-RED Dashboard","hideToolbar":"false","allowSwipe":"false","allowTempTheme":"true","dateFormat":"DD/MM/YYYY","sizes":{"sx":48,"sy":48,"gx":6,"gy":6,"cx":6,"cy":6,"px":0,"py":0}}},{"id":"11207769.c31889","type":"ui_tab","name":"Home","icon":"dashboard"},{"id":"57ff470b.93fdf8","type":"ui_group","name":"Default","tab":"11207769.c31889","order":1,"disp":true,"width":"6","collapse":false,"className":""},{"id":"1a472e1ae426c734","type":"serial-port","name":"","serialport":"COM11","serialbaud":"115200","databits":"8","parity":"none","stopbits":"1","waitfor":"","dtr":"low","rts":"low","cts":"none","dsr":"none","newline":"\\n","bin":"false","out":"char","addchar":"","responsetimeout":"10000"},{"id":"6c6622f5.06be2c","type":"mqtt in","z":"2c41a2bd.aa36ae","name":"","topic":"node/#","qos":"2","datatype":"auto-detect","broker":"29fba84a.b2af58","nl":false,"rap":false,"inputs":0,"x":230,"y":180,"wires":[["ce9f9f18.4bad2"]]},{"id":"ce9f9f18.4bad2","type":"debug","z":"2c41a2bd.aa36ae","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":220,"wires":[]},{"id":"78206c8db79aac77","type":"serial in","z":"2c41a2bd.aa36ae","name":"","serial":"1a472e1ae426c734","x":230,"y":480,"wires":[["ce9f9f18.4bad2","0926021b3f95cb83","0b1325f6f1be8d12"]]},{"id":"0d03bd5af0ba69d8","type":"http request","z":"2c41a2bd.aa36ae","name":"","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://localhost:3002/data","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"Content-Type","keyValue":"","valueType":"application/json","valueValue":""}],"x":730,"y":460,"wires":[[]]},{"id":"0926021b3f95cb83","type":"function","z":"2c41a2bd.aa36ae","name":"function 2","func":"function formatData(input) {\n    //console.log('Valeur de id :', id);\n    // Extraire la valeur numérique de la luminosité\n    var lightValue = parseFloat(input.match(/light : ([0-9.]+)/)[1]);\n    var id = parseFloat(input.match(/ID: ([0-9.]+)/)[1]);\n    // Créer un objet JSON avec la valeur de luminosité\n    var jsonData = {\n        \"illuminance\": lightValue,\n        \"id\": id\n    };\n\n    // Retourner les données formatées en JSON\n    return { payload: jsonData };\n}\n\nreturn formatData(msg.payload);","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":500,"y":480,"wires":[["0d03bd5af0ba69d8","8e2450b5691e89bd"]]},{"id":"8e2450b5691e89bd","type":"debug","z":"2c41a2bd.aa36ae","name":"debug 2","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":720,"y":400,"wires":[]},{"id":"0b1325f6f1be8d12","type":"debug","z":"2c41a2bd.aa36ae","name":"debug 4","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":480,"y":380,"wires":[]},{"id":"69d58ba991c7bafe","type":"azureiotdevice","z":"a1a7e6060477eae1","deviceid":"SmartShade","pnpModelid":"","connectiontype":"constr","authenticationmethod":"sas","iothub":"SmartShade.azure-devices.net","isIotcentral":false,"scopeid":"","enrollmenttype":"group","saskey":"eoQPtLLLcWAxZXwwxqhR1C/0vc+VAuaMaAIoTHaI7ls=","certname":"","keyname":"","passphrase":"","protocol":"mqtt","retryInterval":10,"methods":[],"DPSpayload":"","gatewayHostname":"","caname":"","cert":"","key":"","ca":"","x":180,"y":140,"wires":[["2f1f2d029d1ddf0c","899c6190c3e69057"]]},{"id":"2f1f2d029d1ddf0c","type":"debug","z":"a1a7e6060477eae1","name":"debug 1","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":520,"y":140,"wires":[]},{"id":"899c6190c3e69057","type":"function","z":"a1a7e6060477eae1","name":"function 3","func":"let data = JSON.parse(msg.payload.data);\nfor (let room in data) {\n    data[room].blinds = Math.round(data[room].blinds * 10) / 10;\n}\nmsg.payload = data;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":320,"y":240,"wires":[["0a4db81a123cc330"]]},{"id":"0a4db81a123cc330","type":"ui_template","z":"a1a7e6060477eae1","group":"57ff470b.93fdf8","name":"","order":0,"width":"6","height":"7","format":"<div>\n    <table style=\"width:100%; border-collapse: collapse;\">\n        <thead>\n            <tr>\n                <th style=\"border: 1px solid black; padding: 8px;\">Room</th>\n                <th style=\"border: 1px solid black; padding: 8px;\">Blinds</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr ng-repeat=\"(room, data) in msg.payload\">\n                <td style=\"border: 1px solid black; padding: 8px;\">{{data.name}}</td>\n                <td style=\"border: 1px solid black; padding: 8px;\"\n                    ng-style=\"{'background-color': getBlindsColor(data.blinds)}\">\n                    {{data.blinds.toFixed(1)}}\n                </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n\n<script>\n    (function(scope) {\n        // Function to calculate color based on blinds value\n        scope.getBlindsColor = function(blinds) {\n            // Inverse the blinds value for color calculation\n            let green = Math.min(255, Math.round(blinds * 2.55));\n            let red = Math.max(0, 255 - Math.round(blinds * 2.55));\n            return 'rgb(' + red + ',' + green + ',0)';\n        };\n    })(scope);\n</script>","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","className":"","x":540,"y":240,"wires":[[]]}]