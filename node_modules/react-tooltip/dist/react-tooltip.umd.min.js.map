{"version":3,"file":"react-tooltip.umd.min.js","sources":["../src/utils/handle-style.ts","../src/utils/compute-tooltip-position.ts","../src/utils/css-supports.ts","../src/utils/debounce.ts","../src/utils/deep-equal.ts","../src/utils/get-scroll-parent.ts","../src/utils/use-isomorphic-layout-effect.ts","../src/components/TooltipProvider/TooltipProvider.tsx","../src/components/Tooltip/Tooltip.tsx","../src/utils/css-time-to-ms.ts","../src/components/TooltipContent/TooltipContent.tsx","../src/components/TooltipController/TooltipController.tsx","../src/index.tsx","../src/components/TooltipProvider/TooltipWrapper.tsx"],"sourcesContent":["// This is the ID for the core styles of ReactTooltip\nconst REACT_TOOLTIP_CORE_STYLES_ID = 'react-tooltip-core-styles'\n// This is the ID for the visual styles of ReactTooltip\nconst REACT_TOOLTIP_BASE_STYLES_ID = 'react-tooltip-base-styles'\n\nconst injected = {\n  core: false,\n  base: false,\n}\n\nfunction injectStyle({\n  css,\n  id = REACT_TOOLTIP_BASE_STYLES_ID,\n  type = 'base',\n  ref,\n}: {\n  css: string\n  id?: string\n  type?: 'core' | 'base'\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  ref?: any\n}) {\n  if (!css || typeof document === 'undefined' || injected[type]) {\n    return\n  }\n\n  if (\n    type === 'core' &&\n    typeof process !== 'undefined' && // this validation prevents docs from breaking even with `process?`\n    process?.env?.REACT_TOOLTIP_DISABLE_CORE_STYLES\n  ) {\n    return\n  }\n\n  if (\n    type !== 'base' &&\n    typeof process !== 'undefined' && // this validation prevents docs from breaking even with `process?`\n    process?.env?.REACT_TOOLTIP_DISABLE_BASE_STYLES\n  ) {\n    return\n  }\n\n  if (type === 'core') {\n    // eslint-disable-next-line no-param-reassign\n    id = REACT_TOOLTIP_CORE_STYLES_ID\n  }\n\n  if (!ref) {\n    // eslint-disable-next-line no-param-reassign\n    ref = {}\n  }\n  const { insertAt } = ref\n\n  if (document.getElementById(id)) {\n    // this should never happen because of `injected[type]`\n    if (process.env.NODE_ENV !== 'production') {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `[react-tooltip] Element with id '${id}' already exists. Call \\`removeStyle()\\` first`,\n      )\n    }\n    return\n  }\n\n  const head = document.head || document.getElementsByTagName('head')[0]\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const style: any = document.createElement('style')\n  style.id = id\n  style.type = 'text/css'\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild)\n    } else {\n      head.appendChild(style)\n    }\n  } else {\n    head.appendChild(style)\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css\n  } else {\n    style.appendChild(document.createTextNode(css))\n  }\n\n  injected[type] = true\n}\n\n/**\n * @deprecated Use the `disableStyleInjection` tooltip prop instead.\n * See https://react-tooltip.com/docs/examples/styling#disabling-reacttooltip-css\n */\nfunction removeStyle({\n  type = 'base',\n  id = REACT_TOOLTIP_BASE_STYLES_ID,\n}: {\n  type?: 'core' | 'base'\n  id?: string\n} = {}) {\n  if (!injected[type]) {\n    return\n  }\n\n  if (type === 'core') {\n    // eslint-disable-next-line no-param-reassign\n    id = REACT_TOOLTIP_CORE_STYLES_ID\n  }\n\n  const style = document.getElementById(id)\n  if (style?.tagName === 'style') {\n    style?.remove()\n  } else if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line no-console\n    console.warn(\n      `[react-tooltip] Failed to remove 'style' element with id '${id}'. Call \\`injectStyle()\\` first`,\n    )\n  }\n\n  injected[type] = false\n}\n\nexport { injectStyle, removeStyle }\n","import { computePosition, offset, shift, arrow, flip } from '@floating-ui/dom'\nimport type { IComputePositionArgs } from './compute-tooltip-position-types'\n\nconst computeTooltipPosition = async ({\n  elementReference = null,\n  tooltipReference = null,\n  tooltipArrowReference = null,\n  place = 'top',\n  offset: offsetValue = 10,\n  strategy = 'absolute',\n  middlewares = [\n    offset(Number(offsetValue)),\n    flip({\n      fallbackAxisSideDirection: 'start',\n    }),\n    shift({ padding: 5 }),\n  ],\n  border,\n}: IComputePositionArgs) => {\n  if (!elementReference) {\n    // elementReference can be null or undefined and we will not compute the position\n    // eslint-disable-next-line no-console\n    // console.error('The reference element for tooltip was not defined: ', elementReference)\n    return { tooltipStyles: {}, tooltipArrowStyles: {}, place }\n  }\n\n  if (tooltipReference === null) {\n    return { tooltipStyles: {}, tooltipArrowStyles: {}, place }\n  }\n\n  const middleware = middlewares\n\n  if (tooltipArrowReference) {\n    middleware.push(arrow({ element: tooltipArrowReference as HTMLElement, padding: 5 }))\n\n    return computePosition(elementReference as HTMLElement, tooltipReference as HTMLElement, {\n      placement: place,\n      strategy,\n      middleware,\n    }).then(({ x, y, placement, middlewareData }) => {\n      const styles = { left: `${x}px`, top: `${y}px`, border }\n\n      /* c8 ignore start */\n      const { x: arrowX, y: arrowY } = middlewareData.arrow ?? { x: 0, y: 0 }\n\n      const staticSide =\n        {\n          top: 'bottom',\n          right: 'left',\n          bottom: 'top',\n          left: 'right',\n        }[placement.split('-')[0]] ?? 'bottom'\n      /* c8 ignore end */\n\n      const borderSide = border && {\n        borderBottom: border,\n        borderRight: border,\n      }\n\n      let borderWidth = 0\n      if (border) {\n        const match = `${border}`.match(/(\\d+)px/)\n        if (match?.[1]) {\n          borderWidth = Number(match[1])\n        } else {\n          /**\n           * this means `border` was set without `width`,\n           * or non-px value (such as `medium`, `thick`, ...)\n           */\n          borderWidth = 1\n        }\n      }\n\n      /* c8 ignore start */\n      const arrowStyle = {\n        left: arrowX != null ? `${arrowX}px` : '',\n        top: arrowY != null ? `${arrowY}px` : '',\n        right: '',\n        bottom: '',\n        ...borderSide,\n        [staticSide]: `-${4 + borderWidth}px`,\n      }\n      /* c8 ignore end */\n\n      return { tooltipStyles: styles, tooltipArrowStyles: arrowStyle, place: placement }\n    })\n  }\n\n  return computePosition(elementReference as HTMLElement, tooltipReference as HTMLElement, {\n    placement: 'bottom',\n    strategy,\n    middleware,\n  }).then(({ x, y, placement }) => {\n    const styles = { left: `${x}px`, top: `${y}px` }\n\n    return { tooltipStyles: styles, tooltipArrowStyles: {}, place: placement }\n  })\n}\n\nexport default computeTooltipPosition\n","const cssSupports = (property: string, value: string): boolean => {\n  const hasCssSupports = 'CSS' in window && 'supports' in window.CSS\n  return hasCssSupports ? window.CSS.supports(property, value) : true\n}\n\nexport default cssSupports\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/**\n * This function debounce the received function\n * @param { function } \tfunc\t\t\t\tFunction to be debounced\n * @param { number } \t\twait\t\t\t\tTime to wait before execut the function\n * @param { boolean } \timmediate\t\tParam to define if the function will be executed immediately\n */\nconst debounce = <T, A extends any[]>(\n  func: (...args: A) => void,\n  wait?: number,\n  immediate?: boolean,\n) => {\n  let timeout: NodeJS.Timeout | null = null\n\n  const debounced = function debounced(this: T, ...args: A): void {\n    const later = () => {\n      timeout = null\n      if (!immediate) {\n        func.apply(this, args)\n      }\n    }\n\n    if (immediate && !timeout) {\n      /**\n       * there's no need to clear the timeout\n       * since we expect it to resolve and set `timeout = null`\n       */\n      func.apply(this, args)\n      timeout = setTimeout(later, wait)\n    }\n\n    if (!immediate) {\n      if (timeout) {\n        clearTimeout(timeout)\n      }\n      timeout = setTimeout(later, wait)\n    }\n  }\n\n  debounced.cancel = () => {\n    /* c8 ignore start */\n    if (!timeout) {\n      return\n    }\n    /* c8 ignore end */\n    clearTimeout(timeout)\n    timeout = null\n  }\n\n  return debounced\n}\n\nexport default debounce\n","const isObject = (object: unknown): object is Record<string, unknown> => {\n  return object !== null && !Array.isArray(object) && typeof object === 'object'\n}\n\nconst deepEqual = (object1: unknown, object2: unknown): boolean => {\n  if (object1 === object2) {\n    return true\n  }\n\n  if (Array.isArray(object1) && Array.isArray(object2)) {\n    if (object1.length !== object2.length) {\n      return false\n    }\n    return object1.every((val, index) => deepEqual(val, object2[index]))\n  }\n\n  if (Array.isArray(object1) !== Array.isArray(object2)) {\n    return false\n  }\n\n  if (!isObject(object1) || !isObject(object2)) {\n    return object1 === object2\n  }\n\n  const keys1 = Object.keys(object1)\n  const keys2 = Object.keys(object2)\n  if (keys1.length !== keys2.length) {\n    return false\n  }\n\n  return keys1.every((key) => deepEqual(object1[key], object2[key]))\n}\n\nexport default deepEqual\n","const isScrollable = (node: Element) => {\n  if (!(node instanceof HTMLElement || node instanceof SVGElement)) {\n    return false\n  }\n  const style = getComputedStyle(node)\n  return ['overflow', 'overflow-x', 'overflow-y'].some((propertyName) => {\n    const value = style.getPropertyValue(propertyName)\n    return value === 'auto' || value === 'scroll'\n  })\n}\n\nconst getScrollParent = (node: Element | null) => {\n  if (!node) {\n    return null\n  }\n  let currentParent = node.parentElement\n  while (currentParent) {\n    if (isScrollable(currentParent)) {\n      return currentParent\n    }\n    currentParent = currentParent.parentElement\n  }\n  return document.scrollingElement || document.documentElement\n}\n\nexport default getScrollParent\n","import { useLayoutEffect, useEffect } from 'react'\n\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect\n\nexport default useIsomorphicLayoutEffect\n","import React, {\n  createContext,\n  PropsWithChildren,\n  useCallback,\n  useContext,\n  useMemo,\n  useState,\n} from 'react'\n\nimport type {\n  AnchorRef,\n  TooltipContextData,\n  TooltipContextDataWrapper,\n} from './TooltipProviderTypes'\n\nconst DEFAULT_TOOLTIP_ID = 'DEFAULT_TOOLTIP_ID'\nconst DEFAULT_CONTEXT_DATA: TooltipContextData = {\n  anchorRefs: new Set(),\n  activeAnchor: { current: null },\n  attach: () => {\n    /* attach anchor element */\n  },\n  detach: () => {\n    /* detach anchor element */\n  },\n  setActiveAnchor: () => {\n    /* set active anchor */\n  },\n}\n\nconst DEFAULT_CONTEXT_DATA_WRAPPER: TooltipContextDataWrapper = {\n  getTooltipData: () => DEFAULT_CONTEXT_DATA,\n}\n\nconst TooltipContext = createContext<TooltipContextDataWrapper>(DEFAULT_CONTEXT_DATA_WRAPPER)\n\n/**\n * @deprecated Use the `data-tooltip-id` attribute, or the `anchorSelect` prop instead.\n * See https://react-tooltip.com/docs/getting-started\n */\nconst TooltipProvider: React.FC<PropsWithChildren<void>> = ({ children }) => {\n  const [anchorRefMap, setAnchorRefMap] = useState<Record<string, Set<AnchorRef>>>({\n    [DEFAULT_TOOLTIP_ID]: new Set(),\n  })\n  const [activeAnchorMap, setActiveAnchorMap] = useState<Record<string, AnchorRef>>({\n    [DEFAULT_TOOLTIP_ID]: { current: null },\n  })\n\n  const attach = (tooltipId: string, ...refs: AnchorRef[]) => {\n    setAnchorRefMap((oldMap) => {\n      const tooltipRefs = oldMap[tooltipId] ?? new Set()\n      refs.forEach((ref) => tooltipRefs.add(ref))\n      // create new object to trigger re-render\n      return { ...oldMap, [tooltipId]: new Set(tooltipRefs) }\n    })\n  }\n\n  const detach = (tooltipId: string, ...refs: AnchorRef[]) => {\n    setAnchorRefMap((oldMap) => {\n      const tooltipRefs = oldMap[tooltipId]\n      if (!tooltipRefs) {\n        // tooltip not found\n        // maybe thow error?\n        return oldMap\n      }\n      refs.forEach((ref) => tooltipRefs.delete(ref))\n      // create new object to trigger re-render\n      return { ...oldMap }\n    })\n  }\n\n  const setActiveAnchor = (tooltipId: string, ref: React.RefObject<HTMLElement>) => {\n    setActiveAnchorMap((oldMap) => {\n      if (oldMap[tooltipId]?.current === ref.current) {\n        return oldMap\n      }\n      // create new object to trigger re-render\n      return { ...oldMap, [tooltipId]: ref }\n    })\n  }\n\n  const getTooltipData = useCallback(\n    (tooltipId = DEFAULT_TOOLTIP_ID) => ({\n      anchorRefs: anchorRefMap[tooltipId] ?? new Set(),\n      activeAnchor: activeAnchorMap[tooltipId] ?? { current: null },\n      attach: (...refs: AnchorRef[]) => attach(tooltipId, ...refs),\n      detach: (...refs: AnchorRef[]) => detach(tooltipId, ...refs),\n      setActiveAnchor: (ref: AnchorRef) => setActiveAnchor(tooltipId, ref),\n    }),\n    [anchorRefMap, activeAnchorMap, attach, detach],\n  )\n\n  const context = useMemo(() => {\n    return {\n      getTooltipData,\n    }\n  }, [getTooltipData])\n\n  return <TooltipContext.Provider value={context}>{children}</TooltipContext.Provider>\n}\n\nexport function useTooltip(tooltipId = DEFAULT_TOOLTIP_ID) {\n  return useContext(TooltipContext).getTooltipData(tooltipId)\n}\n\nexport default TooltipProvider\n","import React, { useEffect, useState, useRef, useCallback, useImperativeHandle } from 'react'\nimport { autoUpdate } from '@floating-ui/dom'\nimport classNames from 'classnames'\nimport {\n  debounce,\n  deepEqual,\n  useIsomorphicLayoutEffect,\n  getScrollParent,\n  computeTooltipPosition,\n  cssTimeToMs,\n} from 'utils'\nimport type { IComputedPosition } from 'utils'\nimport { useTooltip } from 'components/TooltipProvider'\nimport coreStyles from './core-styles.module.css'\nimport styles from './styles.module.css'\nimport type {\n  AnchorCloseEvents,\n  AnchorOpenEvents,\n  GlobalCloseEvents,\n  IPosition,\n  ITooltip,\n  TooltipImperativeOpenOptions,\n} from './TooltipTypes'\n\nconst Tooltip = ({\n  // props\n  forwardRef,\n  id,\n  className,\n  classNameArrow,\n  variant = 'dark',\n  anchorId,\n  anchorSelect,\n  place = 'top',\n  offset = 10,\n  events = ['hover'],\n  openOnClick = false,\n  positionStrategy = 'absolute',\n  middlewares,\n  wrapper: WrapperElement,\n  delayShow = 0,\n  delayHide = 0,\n  float = false,\n  hidden = false,\n  noArrow = false,\n  clickable = false,\n  closeOnEsc = false,\n  closeOnScroll = false,\n  closeOnResize = false,\n  openEvents,\n  closeEvents,\n  globalCloseEvents,\n  imperativeModeOnly,\n  style: externalStyles,\n  position,\n  afterShow,\n  afterHide,\n  // props handled by controller\n  content,\n  contentWrapperRef,\n  isOpen,\n  defaultIsOpen = false,\n  setIsOpen,\n  activeAnchor,\n  setActiveAnchor,\n  border,\n  opacity,\n  arrowColor,\n  role = 'tooltip',\n}: ITooltip) => {\n  const tooltipRef = useRef<HTMLElement>(null)\n  const tooltipArrowRef = useRef<HTMLElement>(null)\n  const tooltipShowDelayTimerRef = useRef<NodeJS.Timeout | null>(null)\n  const tooltipHideDelayTimerRef = useRef<NodeJS.Timeout | null>(null)\n  const missedTransitionTimerRef = useRef<NodeJS.Timeout | null>(null)\n  const [computedPosition, setComputedPosition] = useState<IComputedPosition>({\n    tooltipStyles: {},\n    tooltipArrowStyles: {},\n    place,\n  })\n  const [show, setShow] = useState(false)\n  const [rendered, setRendered] = useState(false)\n  const [imperativeOptions, setImperativeOptions] = useState<TooltipImperativeOpenOptions | null>(\n    null,\n  )\n  const wasShowing = useRef(false)\n  const lastFloatPosition = useRef<IPosition | null>(null)\n  /**\n   * @todo Remove this in a future version (provider/wrapper method is deprecated)\n   */\n  const { anchorRefs, setActiveAnchor: setProviderActiveAnchor } = useTooltip(id)\n  const hoveringTooltip = useRef(false)\n  const [anchorsBySelect, setAnchorsBySelect] = useState<HTMLElement[]>([])\n  const mounted = useRef(false)\n\n  /**\n   * @todo Update when deprecated stuff gets removed.\n   */\n  const shouldOpenOnClick = openOnClick || events.includes('click')\n  const hasClickEvent =\n    shouldOpenOnClick || openEvents?.click || openEvents?.dblclick || openEvents?.mousedown\n  const actualOpenEvents: AnchorOpenEvents = openEvents\n    ? { ...openEvents }\n    : {\n        mouseenter: true,\n        focus: true,\n        click: false,\n        dblclick: false,\n        mousedown: false,\n      }\n  if (!openEvents && shouldOpenOnClick) {\n    Object.assign(actualOpenEvents, {\n      mouseenter: false,\n      focus: false,\n      click: true,\n    })\n  }\n  const actualCloseEvents: AnchorCloseEvents = closeEvents\n    ? { ...closeEvents }\n    : {\n        mouseleave: true,\n        blur: true,\n        click: false,\n        dblclick: false,\n        mouseup: false,\n      }\n  if (!closeEvents && shouldOpenOnClick) {\n    Object.assign(actualCloseEvents, {\n      mouseleave: false,\n      blur: false,\n    })\n  }\n  const actualGlobalCloseEvents: GlobalCloseEvents = globalCloseEvents\n    ? { ...globalCloseEvents }\n    : {\n        escape: closeOnEsc || false,\n        scroll: closeOnScroll || false,\n        resize: closeOnResize || false,\n        clickOutsideAnchor: hasClickEvent || false,\n      }\n\n  if (imperativeModeOnly) {\n    Object.assign(actualOpenEvents, {\n      mouseenter: false,\n      focus: false,\n      click: false,\n      dblclick: false,\n      mousedown: false,\n    })\n    Object.assign(actualCloseEvents, {\n      mouseleave: false,\n      blur: false,\n      click: false,\n      dblclick: false,\n      mouseup: false,\n    })\n    Object.assign(actualGlobalCloseEvents, {\n      escape: false,\n      scroll: false,\n      resize: false,\n      clickOutsideAnchor: false,\n    })\n  }\n\n  /**\n   * useLayoutEffect runs before useEffect,\n   * but should be used carefully because of caveats\n   * https://beta.reactjs.org/reference/react/useLayoutEffect#caveats\n   */\n  useIsomorphicLayoutEffect(() => {\n    mounted.current = true\n    return () => {\n      mounted.current = false\n    }\n  }, [])\n\n  const handleShow = (value: boolean) => {\n    if (!mounted.current) {\n      return\n    }\n    if (value) {\n      setRendered(true)\n    }\n    /**\n     * wait for the component to render and calculate position\n     * before actually showing\n     */\n    setTimeout(() => {\n      if (!mounted.current) {\n        return\n      }\n      setIsOpen?.(value)\n      if (isOpen === undefined) {\n        setShow(value)\n      }\n    }, 10)\n  }\n\n  /**\n   * this replicates the effect from `handleShow()`\n   * when `isOpen` is changed from outside\n   */\n  useEffect(() => {\n    if (isOpen === undefined) {\n      return () => null\n    }\n    if (isOpen) {\n      setRendered(true)\n    }\n    const timeout = setTimeout(() => {\n      setShow(isOpen)\n    }, 10)\n    return () => {\n      clearTimeout(timeout)\n    }\n  }, [isOpen])\n\n  useEffect(() => {\n    if (show === wasShowing.current) {\n      return\n    }\n    if (missedTransitionTimerRef.current) {\n      clearTimeout(missedTransitionTimerRef.current)\n    }\n    wasShowing.current = show\n    if (show) {\n      afterShow?.()\n    } else {\n      /**\n       * see `onTransitionEnd` on tooltip wrapper\n       */\n      const style = getComputedStyle(document.body)\n      const transitionShowDelay = cssTimeToMs(style.getPropertyValue('--rt-transition-show-delay'))\n      missedTransitionTimerRef.current = setTimeout(() => {\n        /**\n         * if the tooltip switches from `show === true` to `show === false` too fast\n         * the transition never runs, so `onTransitionEnd` callback never gets fired\n         */\n        setRendered(false)\n        setImperativeOptions(null)\n        afterHide?.()\n        // +25ms just to make sure `onTransitionEnd` (if it gets fired) has time to run\n      }, transitionShowDelay + 25)\n    }\n  }, [show])\n\n  const handleComputedPosition = (newComputedPosition: IComputedPosition) => {\n    setComputedPosition((oldComputedPosition) =>\n      deepEqual(oldComputedPosition, newComputedPosition)\n        ? oldComputedPosition\n        : newComputedPosition,\n    )\n  }\n\n  const handleShowTooltipDelayed = (delay = delayShow) => {\n    if (tooltipShowDelayTimerRef.current) {\n      clearTimeout(tooltipShowDelayTimerRef.current)\n    }\n\n    if (rendered) {\n      // if the tooltip is already rendered, ignore delay\n      handleShow(true)\n      return\n    }\n\n    tooltipShowDelayTimerRef.current = setTimeout(() => {\n      handleShow(true)\n    }, delay)\n  }\n\n  const handleHideTooltipDelayed = (delay = delayHide) => {\n    if (tooltipHideDelayTimerRef.current) {\n      clearTimeout(tooltipHideDelayTimerRef.current)\n    }\n\n    tooltipHideDelayTimerRef.current = setTimeout(() => {\n      if (hoveringTooltip.current) {\n        return\n      }\n      handleShow(false)\n    }, delay)\n  }\n\n  const handleShowTooltip = (event?: Event) => {\n    if (!event) {\n      return\n    }\n    const target = (event.currentTarget ?? event.target) as HTMLElement | null\n    if (!target?.isConnected) {\n      /**\n       * this happens when the target is removed from the DOM\n       * at the same time the tooltip gets triggered\n       */\n      setActiveAnchor(null)\n      setProviderActiveAnchor({ current: null })\n      return\n    }\n    if (delayShow) {\n      handleShowTooltipDelayed()\n    } else {\n      handleShow(true)\n    }\n    setActiveAnchor(target)\n    setProviderActiveAnchor({ current: target })\n\n    if (tooltipHideDelayTimerRef.current) {\n      clearTimeout(tooltipHideDelayTimerRef.current)\n    }\n  }\n\n  const handleHideTooltip = () => {\n    if (clickable) {\n      // allow time for the mouse to reach the tooltip, in case there's a gap\n      handleHideTooltipDelayed(delayHide || 100)\n    } else if (delayHide) {\n      handleHideTooltipDelayed()\n    } else {\n      handleShow(false)\n    }\n\n    if (tooltipShowDelayTimerRef.current) {\n      clearTimeout(tooltipShowDelayTimerRef.current)\n    }\n  }\n\n  const handleTooltipPosition = ({ x, y }: IPosition) => {\n    const virtualElement = {\n      getBoundingClientRect() {\n        return {\n          x,\n          y,\n          width: 0,\n          height: 0,\n          top: y,\n          left: x,\n          right: x,\n          bottom: y,\n        }\n      },\n    } as Element\n    computeTooltipPosition({\n      place: imperativeOptions?.place ?? place,\n      offset,\n      elementReference: virtualElement,\n      tooltipReference: tooltipRef.current,\n      tooltipArrowReference: tooltipArrowRef.current,\n      strategy: positionStrategy,\n      middlewares,\n      border,\n    }).then((computedStylesData) => {\n      handleComputedPosition(computedStylesData)\n    })\n  }\n\n  const handlePointerMove = (event?: Event) => {\n    if (!event) {\n      return\n    }\n    const mouseEvent = event as MouseEvent\n    const mousePosition = {\n      x: mouseEvent.clientX,\n      y: mouseEvent.clientY,\n    }\n    handleTooltipPosition(mousePosition)\n    lastFloatPosition.current = mousePosition\n  }\n\n  const handleClickOutsideAnchors = (event: MouseEvent) => {\n    if (!show) {\n      return\n    }\n    const target = event.target as HTMLElement\n    if (!target.isConnected) {\n      return\n    }\n    if (tooltipRef.current?.contains(target)) {\n      return\n    }\n    const anchorById = document.querySelector<HTMLElement>(`[id='${anchorId}']`)\n    const anchors = [anchorById, ...anchorsBySelect]\n    if (anchors.some((anchor) => anchor?.contains(target))) {\n      return\n    }\n    handleShow(false)\n    if (tooltipShowDelayTimerRef.current) {\n      clearTimeout(tooltipShowDelayTimerRef.current)\n    }\n  }\n\n  // debounce handler to prevent call twice when\n  // mouse enter and focus events being triggered toggether\n  const internalDebouncedHandleShowTooltip = debounce(handleShowTooltip, 50, true)\n  const internalDebouncedHandleHideTooltip = debounce(handleHideTooltip, 50, true)\n  // If either of the functions is called while the other is still debounced,\n  // reset the timeout. Otherwise if there is a sub-50ms (leave A, enter B, leave B)\n  // sequence of events, the tooltip will stay open because the hide debounce\n  // from leave A prevented the leave B event from calling it, leaving the\n  // tooltip visible.\n  const debouncedHandleShowTooltip = (e?: Event) => {\n    internalDebouncedHandleHideTooltip.cancel()\n    internalDebouncedHandleShowTooltip(e)\n  }\n  const debouncedHandleHideTooltip = () => {\n    internalDebouncedHandleShowTooltip.cancel()\n    internalDebouncedHandleHideTooltip()\n  }\n\n  const updateTooltipPosition = useCallback(() => {\n    const actualPosition = imperativeOptions?.position ?? position\n    if (actualPosition) {\n      // if `position` is set, override regular and `float` positioning\n      handleTooltipPosition(actualPosition)\n      return\n    }\n\n    if (float) {\n      if (lastFloatPosition.current) {\n        /*\n          Without this, changes to `content`, `place`, `offset`, ..., will only\n          trigger a position calculation after a `mousemove` event.\n\n          To see why this matters, comment this line, run `yarn dev` and click the\n          \"Hover me!\" anchor.\n        */\n        handleTooltipPosition(lastFloatPosition.current)\n      }\n      // if `float` is set, override regular positioning\n      return\n    }\n\n    if (!activeAnchor?.isConnected) {\n      return\n    }\n\n    computeTooltipPosition({\n      place: imperativeOptions?.place ?? place,\n      offset,\n      elementReference: activeAnchor,\n      tooltipReference: tooltipRef.current,\n      tooltipArrowReference: tooltipArrowRef.current,\n      strategy: positionStrategy,\n      middlewares,\n      border,\n    }).then((computedStylesData) => {\n      if (!mounted.current) {\n        // invalidate computed positions after remount\n        return\n      }\n      handleComputedPosition(computedStylesData)\n    })\n  }, [\n    show,\n    activeAnchor,\n    content,\n    externalStyles,\n    place,\n    imperativeOptions?.place,\n    offset,\n    positionStrategy,\n    position,\n    imperativeOptions?.position,\n    float,\n  ])\n\n  useEffect(() => {\n    const elementRefs = new Set(anchorRefs)\n\n    anchorsBySelect.forEach((anchor) => {\n      elementRefs.add({ current: anchor })\n    })\n\n    const anchorById = document.querySelector<HTMLElement>(`[id='${anchorId}']`)\n    if (anchorById) {\n      elementRefs.add({ current: anchorById })\n    }\n\n    const handleScrollResize = () => {\n      handleShow(false)\n    }\n\n    const anchorScrollParent = getScrollParent(activeAnchor)\n    const tooltipScrollParent = getScrollParent(tooltipRef.current)\n\n    if (actualGlobalCloseEvents.scroll) {\n      window.addEventListener('scroll', handleScrollResize)\n      anchorScrollParent?.addEventListener('scroll', handleScrollResize)\n      tooltipScrollParent?.addEventListener('scroll', handleScrollResize)\n    }\n    let updateTooltipCleanup: null | (() => void) = null\n    if (actualGlobalCloseEvents.resize) {\n      window.addEventListener('resize', handleScrollResize)\n    } else if (activeAnchor && tooltipRef.current) {\n      updateTooltipCleanup = autoUpdate(\n        activeAnchor as HTMLElement,\n        tooltipRef.current as HTMLElement,\n        updateTooltipPosition,\n        {\n          ancestorResize: true,\n          elementResize: true,\n          layoutShift: true,\n        },\n      )\n    }\n\n    const handleEsc = (event: KeyboardEvent) => {\n      if (event.key !== 'Escape') {\n        return\n      }\n      handleShow(false)\n    }\n    if (actualGlobalCloseEvents.escape) {\n      window.addEventListener('keydown', handleEsc)\n    }\n\n    if (actualGlobalCloseEvents.clickOutsideAnchor) {\n      window.addEventListener('click', handleClickOutsideAnchors)\n    }\n\n    const enabledEvents: { event: string; listener: (event?: Event) => void }[] = []\n\n    const handleClickOpenTooltipAnchor = (event?: Event) => {\n      if (show && event?.target === activeAnchor) {\n        /**\n         * ignore clicking the anchor that was used to open the tooltip.\n         * this avoids conflict with the click close event.\n         */\n        return\n      }\n      handleShowTooltip(event)\n    }\n    const handleClickCloseTooltipAnchor = (event?: Event) => {\n      if (!show || event?.target !== activeAnchor) {\n        /**\n         * ignore clicking the anchor that was NOT used to open the tooltip.\n         * this avoids closing the tooltip when clicking on a\n         * new anchor with the tooltip already open.\n         */\n        return\n      }\n      handleHideTooltip()\n    }\n\n    const regularEvents = ['mouseenter', 'mouseleave', 'focus', 'blur']\n    const clickEvents = ['click', 'dblclick', 'mousedown', 'mouseup']\n\n    Object.entries(actualOpenEvents).forEach(([event, enabled]) => {\n      if (!enabled) {\n        return\n      }\n      if (regularEvents.includes(event)) {\n        enabledEvents.push({ event, listener: debouncedHandleShowTooltip })\n      } else if (clickEvents.includes(event)) {\n        enabledEvents.push({ event, listener: handleClickOpenTooltipAnchor })\n      } else {\n        // never happens\n      }\n    })\n\n    Object.entries(actualCloseEvents).forEach(([event, enabled]) => {\n      if (!enabled) {\n        return\n      }\n      if (regularEvents.includes(event)) {\n        enabledEvents.push({ event, listener: debouncedHandleHideTooltip })\n      } else if (clickEvents.includes(event)) {\n        enabledEvents.push({ event, listener: handleClickCloseTooltipAnchor })\n      } else {\n        // never happens\n      }\n    })\n\n    if (float) {\n      enabledEvents.push({\n        event: 'pointermove',\n        listener: handlePointerMove,\n      })\n    }\n\n    const handleMouseEnterTooltip = () => {\n      hoveringTooltip.current = true\n    }\n    const handleMouseLeaveTooltip = () => {\n      hoveringTooltip.current = false\n      handleHideTooltip()\n    }\n\n    if (clickable && !hasClickEvent) {\n      // used to keep the tooltip open when hovering content.\n      // not needed if using click events.\n      tooltipRef.current?.addEventListener('mouseenter', handleMouseEnterTooltip)\n      tooltipRef.current?.addEventListener('mouseleave', handleMouseLeaveTooltip)\n    }\n\n    enabledEvents.forEach(({ event, listener }) => {\n      elementRefs.forEach((ref) => {\n        ref.current?.addEventListener(event, listener)\n      })\n    })\n\n    return () => {\n      if (actualGlobalCloseEvents.scroll) {\n        window.removeEventListener('scroll', handleScrollResize)\n        anchorScrollParent?.removeEventListener('scroll', handleScrollResize)\n        tooltipScrollParent?.removeEventListener('scroll', handleScrollResize)\n      }\n      if (actualGlobalCloseEvents.resize) {\n        window.removeEventListener('resize', handleScrollResize)\n      } else {\n        updateTooltipCleanup?.()\n      }\n      if (actualGlobalCloseEvents.clickOutsideAnchor) {\n        window.removeEventListener('click', handleClickOutsideAnchors)\n      }\n      if (actualGlobalCloseEvents.escape) {\n        window.removeEventListener('keydown', handleEsc)\n      }\n      if (clickable && !hasClickEvent) {\n        tooltipRef.current?.removeEventListener('mouseenter', handleMouseEnterTooltip)\n        tooltipRef.current?.removeEventListener('mouseleave', handleMouseLeaveTooltip)\n      }\n      enabledEvents.forEach(({ event, listener }) => {\n        elementRefs.forEach((ref) => {\n          ref.current?.removeEventListener(event, listener)\n        })\n      })\n    }\n    /**\n     * rendered is also a dependency to ensure anchor observers are re-registered\n     * since `tooltipRef` becomes stale after removing/adding the tooltip to the DOM\n     */\n  }, [\n    activeAnchor,\n    updateTooltipPosition,\n    rendered,\n    anchorRefs,\n    anchorsBySelect,\n    // the effect uses the `actual*Events` objects, but this should work\n    openEvents,\n    closeEvents,\n    globalCloseEvents,\n    shouldOpenOnClick,\n    delayShow,\n    delayHide,\n  ])\n\n  useEffect(() => {\n    let selector = imperativeOptions?.anchorSelect ?? anchorSelect ?? ''\n    if (!selector && id) {\n      selector = `[data-tooltip-id='${id.replace(/'/g, \"\\\\'\")}']`\n    }\n    const documentObserverCallback: MutationCallback = (mutationList) => {\n      const newAnchors: HTMLElement[] = []\n      const removedAnchors: HTMLElement[] = []\n      mutationList.forEach((mutation) => {\n        if (mutation.type === 'attributes' && mutation.attributeName === 'data-tooltip-id') {\n          const newId = (mutation.target as HTMLElement).getAttribute('data-tooltip-id')\n          if (newId === id) {\n            newAnchors.push(mutation.target as HTMLElement)\n          } else if (mutation.oldValue === id) {\n            // data-tooltip-id has now been changed, so we need to remove this anchor\n            removedAnchors.push(mutation.target as HTMLElement)\n          }\n        }\n        if (mutation.type !== 'childList') {\n          return\n        }\n        if (activeAnchor) {\n          const elements = [...mutation.removedNodes].filter((node) => node.nodeType === 1)\n          if (selector) {\n            try {\n              removedAnchors.push(\n                // the element itself is an anchor\n                ...(elements.filter((element) =>\n                  (element as HTMLElement).matches(selector),\n                ) as HTMLElement[]),\n              )\n              removedAnchors.push(\n                // the element has children which are anchors\n                ...elements.flatMap(\n                  (element) =>\n                    [...(element as HTMLElement).querySelectorAll(selector)] as HTMLElement[],\n                ),\n              )\n            } catch {\n              /**\n               * invalid CSS selector.\n               * already warned on tooltip controller\n               */\n            }\n          }\n          elements.some((node) => {\n            if (node?.contains?.(activeAnchor)) {\n              setRendered(false)\n              handleShow(false)\n              setActiveAnchor(null)\n              if (tooltipShowDelayTimerRef.current) {\n                clearTimeout(tooltipShowDelayTimerRef.current)\n              }\n              if (tooltipHideDelayTimerRef.current) {\n                clearTimeout(tooltipHideDelayTimerRef.current)\n              }\n              return true\n            }\n            return false\n          })\n        }\n        if (!selector) {\n          return\n        }\n        try {\n          const elements = [...mutation.addedNodes].filter((node) => node.nodeType === 1)\n          newAnchors.push(\n            // the element itself is an anchor\n            ...(elements.filter((element) =>\n              (element as HTMLElement).matches(selector),\n            ) as HTMLElement[]),\n          )\n          newAnchors.push(\n            // the element has children which are anchors\n            ...elements.flatMap(\n              (element) =>\n                [...(element as HTMLElement).querySelectorAll(selector)] as HTMLElement[],\n            ),\n          )\n        } catch {\n          /**\n           * invalid CSS selector.\n           * already warned on tooltip controller\n           */\n        }\n      })\n      if (newAnchors.length || removedAnchors.length) {\n        setAnchorsBySelect((anchors) => [\n          ...anchors.filter((anchor) => !removedAnchors.includes(anchor)),\n          ...newAnchors,\n        ])\n      }\n    }\n    const documentObserver = new MutationObserver(documentObserverCallback)\n    // watch for anchor being removed from the DOM\n    documentObserver.observe(document.body, {\n      childList: true,\n      subtree: true,\n      attributes: true,\n      attributeFilter: ['data-tooltip-id'],\n      // to track the prev value if we need to remove anchor when data-tooltip-id gets changed\n      attributeOldValue: true,\n    })\n    return () => {\n      documentObserver.disconnect()\n    }\n  }, [id, anchorSelect, imperativeOptions?.anchorSelect, activeAnchor])\n\n  useEffect(() => {\n    updateTooltipPosition()\n  }, [updateTooltipPosition])\n\n  useEffect(() => {\n    if (!contentWrapperRef?.current) {\n      return () => null\n    }\n    const contentObserver = new ResizeObserver(() => {\n      setTimeout(() => updateTooltipPosition())\n    })\n    contentObserver.observe(contentWrapperRef.current)\n    return () => {\n      contentObserver.disconnect()\n    }\n  }, [content, contentWrapperRef?.current])\n\n  useEffect(() => {\n    const anchorById = document.querySelector<HTMLElement>(`[id='${anchorId}']`)\n    const anchors = [...anchorsBySelect, anchorById]\n    if (!activeAnchor || !anchors.includes(activeAnchor)) {\n      /**\n       * if there is no active anchor,\n       * or if the current active anchor is not amongst the allowed ones,\n       * reset it\n       */\n      setActiveAnchor(anchorsBySelect[0] ?? anchorById)\n    }\n  }, [anchorId, anchorsBySelect, activeAnchor])\n\n  useEffect(() => {\n    if (defaultIsOpen) {\n      handleShow(true)\n    }\n    return () => {\n      if (tooltipShowDelayTimerRef.current) {\n        clearTimeout(tooltipShowDelayTimerRef.current)\n      }\n      if (tooltipHideDelayTimerRef.current) {\n        clearTimeout(tooltipHideDelayTimerRef.current)\n      }\n    }\n  }, [])\n\n  useEffect(() => {\n    let selector = imperativeOptions?.anchorSelect ?? anchorSelect\n    if (!selector && id) {\n      selector = `[data-tooltip-id='${id.replace(/'/g, \"\\\\'\")}']`\n    }\n    if (!selector) {\n      return\n    }\n    try {\n      const anchors = Array.from(document.querySelectorAll<HTMLElement>(selector))\n      setAnchorsBySelect(anchors)\n    } catch {\n      // warning was already issued in the controller\n      setAnchorsBySelect([])\n    }\n  }, [id, anchorSelect, imperativeOptions?.anchorSelect])\n\n  useEffect(() => {\n    if (tooltipShowDelayTimerRef.current) {\n      clearTimeout(tooltipShowDelayTimerRef.current)\n      handleShowTooltipDelayed(delayShow)\n    }\n  }, [delayShow])\n\n  const actualContent = imperativeOptions?.content ?? content\n  const canShow = show && Object.keys(computedPosition.tooltipStyles).length > 0\n\n  useImperativeHandle(forwardRef, () => ({\n    open: (options) => {\n      if (options?.anchorSelect) {\n        try {\n          document.querySelector(options.anchorSelect)\n        } catch {\n          if (!process.env.NODE_ENV || process.env.NODE_ENV !== 'production') {\n            // eslint-disable-next-line no-console\n            console.warn(`[react-tooltip] \"${options.anchorSelect}\" is not a valid CSS selector`)\n          }\n          return\n        }\n      }\n      setImperativeOptions(options ?? null)\n      if (options?.delay) {\n        handleShowTooltipDelayed(options.delay)\n      } else {\n        handleShow(true)\n      }\n    },\n    close: (options) => {\n      if (options?.delay) {\n        handleHideTooltipDelayed(options.delay)\n      } else {\n        handleShow(false)\n      }\n    },\n    activeAnchor,\n    place: computedPosition.place,\n    isOpen: Boolean(rendered && !hidden && actualContent && canShow),\n  }))\n\n  return rendered && !hidden && actualContent ? (\n    <WrapperElement\n      id={id}\n      role={role}\n      className={classNames(\n        'react-tooltip',\n        coreStyles['tooltip'],\n        styles['tooltip'],\n        styles[variant],\n        className,\n        `react-tooltip__place-${computedPosition.place}`,\n        coreStyles[canShow ? 'show' : 'closing'],\n        canShow ? 'react-tooltip__show' : 'react-tooltip__closing',\n        positionStrategy === 'fixed' && coreStyles['fixed'],\n        clickable && coreStyles['clickable'],\n      )}\n      onTransitionEnd={(event: TransitionEvent) => {\n        if (missedTransitionTimerRef.current) {\n          clearTimeout(missedTransitionTimerRef.current)\n        }\n        if (show || event.propertyName !== 'opacity') {\n          return\n        }\n        setRendered(false)\n        setImperativeOptions(null)\n        afterHide?.()\n      }}\n      style={{\n        ...externalStyles,\n        ...computedPosition.tooltipStyles,\n        opacity: opacity !== undefined && canShow ? opacity : undefined,\n      }}\n      ref={tooltipRef}\n    >\n      {actualContent}\n      <WrapperElement\n        className={classNames(\n          'react-tooltip-arrow',\n          coreStyles['arrow'],\n          styles['arrow'],\n          classNameArrow,\n          noArrow && coreStyles['noArrow'],\n        )}\n        style={{\n          ...computedPosition.tooltipArrowStyles,\n          background: arrowColor\n            ? `linear-gradient(to right bottom, transparent 50%, ${arrowColor} 50%)`\n            : undefined,\n        }}\n        ref={tooltipArrowRef}\n      />\n    </WrapperElement>\n  ) : null\n}\n\nexport default Tooltip\n","const cssTimeToMs = (time: string): number => {\n  const match = time.match(/^([\\d.]+)(ms|s)$/)\n  if (!match) {\n    return 0\n  }\n  const [, amount, unit] = match\n  return Number(amount) * (unit === 'ms' ? 1 : 1000)\n}\n\nexport default cssTimeToMs\n","/* eslint-disable react/no-danger */\nimport React from 'react'\nimport type { ITooltipContent } from './TooltipContentTypes'\n\nconst TooltipContent = ({ content }: ITooltipContent) => {\n  return <span dangerouslySetInnerHTML={{ __html: content }} />\n}\n\nexport default TooltipContent\n","import React, { useEffect, useRef, useState } from 'react'\nimport { Tooltip } from 'components/Tooltip'\nimport type {\n  EventsType,\n  PositionStrategy,\n  PlacesType,\n  VariantType,\n  WrapperType,\n  DataAttribute,\n  ITooltip,\n  ChildrenType,\n  TooltipRefProps,\n} from 'components/Tooltip/TooltipTypes'\nimport { useTooltip } from 'components/TooltipProvider'\nimport { TooltipContent } from 'components/TooltipContent'\nimport { cssSupports } from 'utils'\nimport classNames from 'classnames'\nimport type { ITooltipController } from './TooltipControllerTypes'\n\nconst TooltipController = React.forwardRef<TooltipRefProps, ITooltipController>(\n  (\n    {\n      id,\n      anchorId,\n      anchorSelect,\n      content,\n      html,\n      render,\n      className,\n      classNameArrow,\n      variant = 'dark',\n      place = 'top',\n      offset = 10,\n      wrapper = 'div',\n      children = null,\n      events = ['hover'],\n      openOnClick = false,\n      positionStrategy = 'absolute',\n      middlewares,\n      delayShow = 0,\n      delayHide = 0,\n      float = false,\n      hidden = false,\n      noArrow = false,\n      clickable = false,\n      closeOnEsc = false,\n      closeOnScroll = false,\n      closeOnResize = false,\n      openEvents,\n      closeEvents,\n      globalCloseEvents,\n      imperativeModeOnly = false,\n      style,\n      position,\n      isOpen,\n      defaultIsOpen = false,\n      disableStyleInjection = false,\n      border,\n      opacity,\n      arrowColor,\n      setIsOpen,\n      afterShow,\n      afterHide,\n      role = 'tooltip',\n    }: ITooltipController,\n    ref,\n  ) => {\n    const [tooltipContent, setTooltipContent] = useState(content)\n    const [tooltipHtml, setTooltipHtml] = useState(html)\n    const [tooltipPlace, setTooltipPlace] = useState(place)\n    const [tooltipVariant, setTooltipVariant] = useState(variant)\n    const [tooltipOffset, setTooltipOffset] = useState(offset)\n    const [tooltipDelayShow, setTooltipDelayShow] = useState(delayShow)\n    const [tooltipDelayHide, setTooltipDelayHide] = useState(delayHide)\n    const [tooltipFloat, setTooltipFloat] = useState(float)\n    const [tooltipHidden, setTooltipHidden] = useState(hidden)\n    const [tooltipWrapper, setTooltipWrapper] = useState<WrapperType>(wrapper)\n    const [tooltipEvents, setTooltipEvents] = useState(events)\n    const [tooltipPositionStrategy, setTooltipPositionStrategy] = useState(positionStrategy)\n    const [tooltipClassName, setTooltipClassName] = useState<string | null>(null)\n    const [activeAnchor, setActiveAnchor] = useState<HTMLElement | null>(null)\n    const styleInjectionRef = useRef(disableStyleInjection)\n    /**\n     * @todo Remove this in a future version (provider/wrapper method is deprecated)\n     */\n    const { anchorRefs, activeAnchor: providerActiveAnchor } = useTooltip(id)\n\n    const getDataAttributesFromAnchorElement = (elementReference: HTMLElement) => {\n      const dataAttributes = elementReference?.getAttributeNames().reduce((acc, name) => {\n        if (name.startsWith('data-tooltip-')) {\n          const parsedAttribute = name.replace(/^data-tooltip-/, '') as DataAttribute\n          acc[parsedAttribute] = elementReference?.getAttribute(name) ?? null\n        }\n        return acc\n      }, {} as Record<DataAttribute, string | null>)\n\n      return dataAttributes\n    }\n\n    const applyAllDataAttributesFromAnchorElement = (\n      dataAttributes: Record<string, string | null>,\n    ) => {\n      const handleDataAttributes: Record<DataAttribute, (value: string | null) => void> = {\n        place: (value) => {\n          setTooltipPlace((value as PlacesType) ?? place)\n        },\n        content: (value) => {\n          setTooltipContent(value ?? content)\n        },\n        html: (value) => {\n          setTooltipHtml(value ?? html)\n        },\n        variant: (value) => {\n          setTooltipVariant((value as VariantType) ?? variant)\n        },\n        offset: (value) => {\n          setTooltipOffset(value === null ? offset : Number(value))\n        },\n        wrapper: (value) => {\n          setTooltipWrapper((value as WrapperType) ?? wrapper)\n        },\n        events: (value) => {\n          const parsed = value?.split(' ') as EventsType[]\n          setTooltipEvents(parsed ?? events)\n        },\n        'position-strategy': (value) => {\n          setTooltipPositionStrategy((value as PositionStrategy) ?? positionStrategy)\n        },\n        'delay-show': (value) => {\n          setTooltipDelayShow(value === null ? delayShow : Number(value))\n        },\n        'delay-hide': (value) => {\n          setTooltipDelayHide(value === null ? delayHide : Number(value))\n        },\n        float: (value) => {\n          setTooltipFloat(value === null ? float : value === 'true')\n        },\n        hidden: (value) => {\n          setTooltipHidden(value === null ? hidden : value === 'true')\n        },\n        'class-name': (value) => {\n          setTooltipClassName(value)\n        },\n      }\n      // reset unset data attributes to default values\n      // without this, data attributes from the last active anchor will still be used\n      Object.values(handleDataAttributes).forEach((handler) => handler(null))\n      Object.entries(dataAttributes).forEach(([key, value]) => {\n        handleDataAttributes[key as DataAttribute]?.(value)\n      })\n    }\n\n    useEffect(() => {\n      setTooltipContent(content)\n    }, [content])\n\n    useEffect(() => {\n      setTooltipHtml(html)\n    }, [html])\n\n    useEffect(() => {\n      setTooltipPlace(place)\n    }, [place])\n\n    useEffect(() => {\n      setTooltipVariant(variant)\n    }, [variant])\n\n    useEffect(() => {\n      setTooltipOffset(offset)\n    }, [offset])\n\n    useEffect(() => {\n      setTooltipDelayShow(delayShow)\n    }, [delayShow])\n\n    useEffect(() => {\n      setTooltipDelayHide(delayHide)\n    }, [delayHide])\n\n    useEffect(() => {\n      setTooltipFloat(float)\n    }, [float])\n\n    useEffect(() => {\n      setTooltipHidden(hidden)\n    }, [hidden])\n\n    useEffect(() => {\n      setTooltipPositionStrategy(positionStrategy)\n    }, [positionStrategy])\n\n    useEffect(() => {\n      if (styleInjectionRef.current === disableStyleInjection) {\n        return\n      }\n      /* c8 ignore start */\n      if (process.env.NODE_ENV !== 'production') {\n        // eslint-disable-next-line no-console\n        console.warn('[react-tooltip] Do not change `disableStyleInjection` dynamically.')\n      }\n      /* c8 ignore end */\n    }, [disableStyleInjection])\n\n    useEffect(() => {\n      if (typeof window !== 'undefined') {\n        window.dispatchEvent(\n          new CustomEvent('react-tooltip-inject-styles', {\n            detail: {\n              disableCore: disableStyleInjection === 'core',\n              disableBase: disableStyleInjection,\n            },\n          }),\n        )\n      }\n    }, [])\n\n    useEffect(() => {\n      const elementRefs = new Set(anchorRefs)\n\n      let selector = anchorSelect\n      if (!selector && id) {\n        selector = `[data-tooltip-id='${id.replace(/'/g, \"\\\\'\")}']`\n      }\n      if (selector) {\n        try {\n          const anchorsBySelect = document.querySelectorAll<HTMLElement>(selector)\n          anchorsBySelect.forEach((anchor) => {\n            elementRefs.add({ current: anchor })\n          })\n        } catch {\n          /* c8 ignore start */\n          if (!process.env.NODE_ENV || process.env.NODE_ENV !== 'production') {\n            // eslint-disable-next-line no-console\n            console.warn(`[react-tooltip] \"${selector}\" is not a valid CSS selector`)\n          }\n          /* c8 ignore end */\n        }\n      }\n\n      const anchorById = document.querySelector<HTMLElement>(`[id='${anchorId}']`)\n      if (anchorById) {\n        elementRefs.add({ current: anchorById })\n      }\n\n      if (!elementRefs.size) {\n        return () => null\n      }\n\n      const anchorElement = activeAnchor ?? anchorById ?? providerActiveAnchor.current\n\n      const observerCallback: MutationCallback = (mutationList) => {\n        mutationList.forEach((mutation) => {\n          if (\n            !anchorElement ||\n            mutation.type !== 'attributes' ||\n            !mutation.attributeName?.startsWith('data-tooltip-')\n          ) {\n            return\n          }\n          // make sure to get all set attributes, since all unset attributes are reset\n          const dataAttributes = getDataAttributesFromAnchorElement(anchorElement)\n          applyAllDataAttributesFromAnchorElement(dataAttributes)\n        })\n      }\n\n      // Create an observer instance linked to the callback function\n      const observer = new MutationObserver(observerCallback)\n\n      // do not check for subtree and childrens, we only want to know attribute changes\n      // to stay watching `data-attributes-*` from anchor element\n      const observerConfig = { attributes: true, childList: false, subtree: false }\n\n      if (anchorElement) {\n        const dataAttributes = getDataAttributesFromAnchorElement(anchorElement)\n        applyAllDataAttributesFromAnchorElement(dataAttributes)\n        // Start observing the target node for configured mutations\n        observer.observe(anchorElement, observerConfig)\n      }\n\n      return () => {\n        // Remove the observer when the tooltip is destroyed\n        observer.disconnect()\n      }\n    }, [anchorRefs, providerActiveAnchor, activeAnchor, anchorId, anchorSelect])\n\n    useEffect(() => {\n      /* c8 ignore start */\n      if (process.env.NODE_ENV === 'production') {\n        return\n      }\n      /* c8 ignore end */\n      if (style?.border) {\n        // eslint-disable-next-line no-console\n        console.warn('[react-tooltip] Do not set `style.border`. Use `border` prop instead.')\n      }\n      if (border && !cssSupports('border', `${border}`)) {\n        // eslint-disable-next-line no-console\n        console.warn(`[react-tooltip] \"${border}\" is not a valid \\`border\\`.`)\n      }\n      if (style?.opacity) {\n        // eslint-disable-next-line no-console\n        console.warn('[react-tooltip] Do not set `style.opacity`. Use `opacity` prop instead.')\n      }\n      if (opacity && !cssSupports('opacity', `${opacity}`)) {\n        // eslint-disable-next-line no-console\n        console.warn(`[react-tooltip] \"${opacity}\" is not a valid \\`opacity\\`.`)\n      }\n    }, [])\n\n    /**\n     * content priority: children < render or content < html\n     * children should be lower priority so that it can be used as the \"default\" content\n     */\n    let renderedContent: ChildrenType = children\n    const contentWrapperRef = useRef<HTMLDivElement>(null)\n    if (render) {\n      const actualContent =\n        activeAnchor?.getAttribute('data-tooltip-content') || tooltipContent || null\n      const rendered = render({ content: actualContent, activeAnchor }) as React.ReactNode\n      renderedContent = rendered ? (\n        <div ref={contentWrapperRef} className=\"react-tooltip-content-wrapper\">\n          {rendered}\n        </div>\n      ) : null\n    } else if (tooltipContent) {\n      renderedContent = tooltipContent\n    }\n    if (tooltipHtml) {\n      renderedContent = <TooltipContent content={tooltipHtml} />\n    }\n\n    const props: ITooltip = {\n      forwardRef: ref,\n      id,\n      anchorId,\n      anchorSelect,\n      className: classNames(className, tooltipClassName),\n      classNameArrow,\n      content: renderedContent,\n      contentWrapperRef,\n      place: tooltipPlace,\n      variant: tooltipVariant,\n      offset: tooltipOffset,\n      wrapper: tooltipWrapper,\n      events: tooltipEvents,\n      openOnClick,\n      positionStrategy: tooltipPositionStrategy,\n      middlewares,\n      delayShow: tooltipDelayShow,\n      delayHide: tooltipDelayHide,\n      float: tooltipFloat,\n      hidden: tooltipHidden,\n      noArrow,\n      clickable,\n      closeOnEsc,\n      closeOnScroll,\n      closeOnResize,\n      openEvents,\n      closeEvents,\n      globalCloseEvents,\n      imperativeModeOnly,\n      style,\n      position,\n      isOpen,\n      defaultIsOpen,\n      border,\n      opacity,\n      arrowColor,\n      setIsOpen,\n      afterShow,\n      afterHide,\n      activeAnchor,\n      setActiveAnchor: (anchor: HTMLElement | null) => setActiveAnchor(anchor),\n      role,\n    }\n\n    return <Tooltip {...props} />\n  },\n)\n\nexport default TooltipController\n","import './tokens.css'\n\nimport { injectStyle } from 'utils/handle-style'\n\nimport type {\n  ChildrenType,\n  DataAttribute,\n  EventsType,\n  PlacesType,\n  PositionStrategy,\n  VariantType,\n  WrapperType,\n  IPosition,\n  Middleware,\n  TooltipRefProps,\n} from './components/Tooltip/TooltipTypes'\nimport type { ITooltipController } from './components/TooltipController/TooltipControllerTypes'\nimport type { ITooltipWrapper } from './components/TooltipProvider/TooltipProviderTypes'\n\n// those content will be replaced in build time with the `react-tooltip.css` builded content\nconst TooltipCoreStyles = 'react-tooltip-core-css-placeholder'\nconst TooltipStyles = 'react-tooltip-css-placeholder'\n\nif (typeof window !== 'undefined') {\n  window.addEventListener('react-tooltip-inject-styles', ((\n    event: CustomEvent<{ disableCore: boolean; disableBase: boolean }>,\n  ) => {\n    if (!event.detail.disableCore) {\n      injectStyle({ css: TooltipCoreStyles, type: 'core' })\n    }\n    if (!event.detail.disableBase) {\n      injectStyle({ css: TooltipStyles, type: 'base' })\n    }\n  }) as EventListener)\n}\n\nexport { TooltipController as Tooltip } from './components/TooltipController'\nexport { TooltipProvider, TooltipWrapper } from './components/TooltipProvider'\nexport type {\n  ChildrenType,\n  DataAttribute,\n  EventsType,\n  PlacesType,\n  PositionStrategy,\n  VariantType,\n  WrapperType,\n  ITooltipController as ITooltip,\n  ITooltipWrapper,\n  IPosition,\n  Middleware,\n  TooltipRefProps,\n}\n\nexport { removeStyle } from './utils/handle-style'\n","import React, { useEffect, useRef } from 'react'\nimport classNames from 'classnames'\nimport { useTooltip } from './TooltipProvider'\nimport type { ITooltipWrapper } from './TooltipProviderTypes'\n\n/**\n * @deprecated Use the `data-tooltip-id` attribute, or the `anchorSelect` prop instead.\n * See https://react-tooltip.com/docs/getting-started\n */\nconst TooltipWrapper = ({\n  tooltipId,\n  children,\n  className,\n  place,\n  content,\n  html,\n  variant,\n  offset,\n  wrapper,\n  events,\n  positionStrategy,\n  delayShow,\n  delayHide,\n}: ITooltipWrapper) => {\n  const { attach, detach } = useTooltip(tooltipId)\n  const anchorRef = useRef<HTMLElement | null>(null)\n\n  useEffect(() => {\n    attach(anchorRef)\n    return () => {\n      detach(anchorRef)\n    }\n  }, [])\n\n  return (\n    <span\n      ref={anchorRef}\n      className={classNames('react-tooltip-wrapper', className)}\n      data-tooltip-place={place}\n      data-tooltip-content={content}\n      data-tooltip-html={html}\n      data-tooltip-variant={variant}\n      data-tooltip-offset={offset}\n      data-tooltip-wrapper={wrapper}\n      data-tooltip-events={events}\n      data-tooltip-position-strategy={positionStrategy}\n      data-tooltip-delay-show={delayShow}\n      data-tooltip-delay-hide={delayHide}\n    >\n      {children}\n    </span>\n  )\n}\n\nexport default TooltipWrapper\n"],"names":["REACT_TOOLTIP_CORE_STYLES_ID","REACT_TOOLTIP_BASE_STYLES_ID","injected","core","base","injectStyle","css","id","type","ref","document","process","_a","env","REACT_TOOLTIP_DISABLE_CORE_STYLES","_b","REACT_TOOLTIP_DISABLE_BASE_STYLES","insertAt","getElementById","console","warn","head","getElementsByTagName","style","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","computeTooltipPosition","async","elementReference","tooltipReference","tooltipArrowReference","place","offset","offsetValue","strategy","middlewares","Number","flip","fallbackAxisSideDirection","shift","padding","border","tooltipStyles","tooltipArrowStyles","middleware","push","arrow","element","computePosition","placement","then","x","y","middlewareData","styles","left","top","arrowX","arrowY","staticSide","right","bottom","split","borderSide","borderBottom","borderRight","borderWidth","match","cssSupports","property","value","window","CSS","supports","debounce","func","wait","immediate","timeout","debounced","args","later","apply","this","setTimeout","clearTimeout","cancel","isObject","object","Array","isArray","deepEqual","object1","object2","length","every","val","index","keys1","Object","keys","keys2","key","isScrollable","node","HTMLElement","SVGElement","getComputedStyle","some","propertyName","getPropertyValue","getScrollParent","currentParent","parentElement","scrollingElement","documentElement","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","DEFAULT_TOOLTIP_ID","DEFAULT_CONTEXT_DATA","anchorRefs","Set","activeAnchor","current","attach","detach","setActiveAnchor","DEFAULT_CONTEXT_DATA_WRAPPER","getTooltipData","TooltipContext","createContext","useTooltip","tooltipId","useContext","Tooltip","forwardRef","className","classNameArrow","variant","anchorId","anchorSelect","events","openOnClick","positionStrategy","wrapper","WrapperElement","delayShow","delayHide","float","hidden","noArrow","clickable","closeOnEsc","closeOnScroll","closeOnResize","openEvents","closeEvents","globalCloseEvents","imperativeModeOnly","externalStyles","position","afterShow","afterHide","content","contentWrapperRef","isOpen","defaultIsOpen","setIsOpen","opacity","arrowColor","role","tooltipRef","useRef","tooltipArrowRef","tooltipShowDelayTimerRef","tooltipHideDelayTimerRef","missedTransitionTimerRef","computedPosition","setComputedPosition","useState","show","setShow","rendered","setRendered","imperativeOptions","setImperativeOptions","wasShowing","lastFloatPosition","setProviderActiveAnchor","hoveringTooltip","anchorsBySelect","setAnchorsBySelect","mounted","shouldOpenOnClick","includes","hasClickEvent","click","dblclick","mousedown","actualOpenEvents","mouseenter","focus","assign","actualCloseEvents","mouseleave","blur","mouseup","actualGlobalCloseEvents","escape","scroll","resize","clickOutsideAnchor","handleShow","undefined","transitionShowDelay","time","amount","unit","cssTimeToMs","body","handleComputedPosition","newComputedPosition","oldComputedPosition","handleShowTooltipDelayed","delay","handleHideTooltipDelayed","handleShowTooltip","event","target","currentTarget","isConnected","handleHideTooltip","handleTooltipPosition","virtualElement","getBoundingClientRect","width","height","computedStylesData","handlePointerMove","mouseEvent","mousePosition","clientX","clientY","handleClickOutsideAnchors","contains","querySelector","anchor","internalDebouncedHandleShowTooltip","internalDebouncedHandleHideTooltip","debouncedHandleShowTooltip","e","debouncedHandleHideTooltip","updateTooltipPosition","useCallback","actualPosition","elementRefs","forEach","add","anchorById","handleScrollResize","anchorScrollParent","tooltipScrollParent","addEventListener","updateTooltipCleanup","autoUpdate","ancestorResize","elementResize","layoutShift","handleEsc","enabledEvents","handleClickOpenTooltipAnchor","handleClickCloseTooltipAnchor","regularEvents","clickEvents","entries","enabled","listener","handleMouseEnterTooltip","handleMouseLeaveTooltip","removeEventListener","selector","replace","documentObserver","MutationObserver","mutationList","newAnchors","removedAnchors","mutation","attributeName","getAttribute","oldValue","elements","removedNodes","filter","nodeType","matches","flatMap","querySelectorAll","call","addedNodes","anchors","observe","childList","subtree","attributes","attributeFilter","attributeOldValue","disconnect","contentObserver","ResizeObserver","from","actualContent","canShow","useImperativeHandle","open","options","close","Boolean","React","classNames","coreStyles","onTransitionEnd","background","TooltipContent","dangerouslySetInnerHTML","__html","TooltipController","html","render","children","disableStyleInjection","tooltipContent","setTooltipContent","tooltipHtml","setTooltipHtml","tooltipPlace","setTooltipPlace","tooltipVariant","setTooltipVariant","tooltipOffset","setTooltipOffset","tooltipDelayShow","setTooltipDelayShow","tooltipDelayHide","setTooltipDelayHide","tooltipFloat","setTooltipFloat","tooltipHidden","setTooltipHidden","tooltipWrapper","setTooltipWrapper","tooltipEvents","setTooltipEvents","tooltipPositionStrategy","setTooltipPositionStrategy","tooltipClassName","setTooltipClassName","styleInjectionRef","providerActiveAnchor","getDataAttributesFromAnchorElement","getAttributeNames","reduce","acc","name","startsWith","applyAllDataAttributesFromAnchorElement","dataAttributes","handleDataAttributes","parsed","values","handler","dispatchEvent","CustomEvent","detail","disableCore","disableBase","size","anchorElement","observer","observerConfig","renderedContent","props","anchorRefMap","setAnchorRefMap","activeAnchorMap","setActiveAnchorMap","refs","oldMap","tooltipRefs","delete","context","useMemo","Provider","anchorRef","tagName","remove"],"mappings":"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"}