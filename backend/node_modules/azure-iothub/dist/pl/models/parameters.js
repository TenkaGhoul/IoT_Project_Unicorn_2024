"use strict";
/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.xMsMaxItemCount = exports.xMsContinuation = exports.top = exports.responseTimeoutInSeconds = exports.moduleId = exports.mid = exports.lockToken = exports.jobType = exports.jobStatus = exports.ifMatch = exports.id = exports.deviceId = exports.connectTimeoutInSeconds = exports.componentPath = exports.commandName = exports.apiVersion = void 0;
exports.apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        required: true,
        serializedName: "api-version",
        defaultValue: '2020-09-30',
        type: {
            name: "String"
        }
    }
};
exports.commandName = {
    parameterPath: "commandName",
    mapper: {
        required: true,
        serializedName: "commandName",
        type: {
            name: "String"
        }
    }
};
exports.componentPath = {
    parameterPath: "componentPath",
    mapper: {
        required: true,
        serializedName: "componentPath",
        type: {
            name: "String"
        }
    }
};
exports.connectTimeoutInSeconds = {
    parameterPath: [
        "options",
        "connectTimeoutInSeconds"
    ],
    mapper: {
        serializedName: "connectTimeoutInSeconds",
        type: {
            name: "Number"
        }
    }
};
exports.deviceId = {
    parameterPath: "deviceId",
    mapper: {
        required: true,
        serializedName: "deviceId",
        type: {
            name: "String"
        }
    }
};
exports.id = {
    parameterPath: "id",
    mapper: {
        required: true,
        serializedName: "id",
        type: {
            name: "String"
        }
    }
};
exports.ifMatch = {
    parameterPath: [
        "options",
        "ifMatch"
    ],
    mapper: {
        serializedName: "If-Match",
        type: {
            name: "String"
        }
    }
};
exports.jobStatus = {
    parameterPath: [
        "options",
        "jobStatus"
    ],
    mapper: {
        serializedName: "jobStatus",
        type: {
            name: "String"
        }
    }
};
exports.jobType = {
    parameterPath: [
        "options",
        "jobType"
    ],
    mapper: {
        serializedName: "jobType",
        type: {
            name: "String"
        }
    }
};
exports.lockToken = {
    parameterPath: "lockToken",
    mapper: {
        required: true,
        serializedName: "lockToken",
        type: {
            name: "String"
        }
    }
};
exports.mid = {
    parameterPath: "mid",
    mapper: {
        required: true,
        serializedName: "mid",
        type: {
            name: "String"
        }
    }
};
exports.moduleId = {
    parameterPath: "moduleId",
    mapper: {
        required: true,
        serializedName: "moduleId",
        type: {
            name: "String"
        }
    }
};
exports.responseTimeoutInSeconds = {
    parameterPath: [
        "options",
        "responseTimeoutInSeconds"
    ],
    mapper: {
        serializedName: "responseTimeoutInSeconds",
        type: {
            name: "Number"
        }
    }
};
exports.top = {
    parameterPath: [
        "options",
        "top"
    ],
    mapper: {
        serializedName: "top",
        type: {
            name: "Number"
        }
    }
};
exports.xMsContinuation = {
    parameterPath: [
        "options",
        "xMsContinuation"
    ],
    mapper: {
        serializedName: "x-ms-continuation",
        type: {
            name: "String"
        }
    }
};
exports.xMsMaxItemCount = {
    parameterPath: [
        "options",
        "xMsMaxItemCount"
    ],
    mapper: {
        serializedName: "x-ms-max-item-count",
        type: {
            name: "String"
        }
    }
};
//# sourceMappingURL=parameters.js.map